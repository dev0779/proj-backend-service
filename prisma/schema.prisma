generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  SUPERVISOR
  VISITOR
  IT
  SUPPORT
  HR
}

model User {
  id           Int       @id @default(autoincrement())
  userId       String    @default(uuid()) @unique
  firstName   String?   @db.VarChar(50) @map("first_name")
  lastName    String?   @db.VarChar(50) @map("last_name")
  username     String?   @unique @db.VarChar(50)
  email        String?   @db.VarChar(100)
  password     String?   @db.VarChar(100)
  status       UserRole? @default(USER)
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  lastLoggedIn DateTime?
  
  @@map("users")
}
enum Status {
  OPEN
  CLOSED
  INPROGRESS
  CANCELED
  WAITING
}

model Ticket {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  status      Status   @default(OPEN)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
}

model SampleTickets {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  status      Status        @default(OPEN)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userId      String?
  user        SampleUsers?  @relation(fields: [userId], references: [userId])
}

model SampleUsers {
  id      Int             @id @default(autoincrement())
  userId  String          @default(uuid()) @unique
  name    String
  email   String
  tickets SampleTickets[]
}
